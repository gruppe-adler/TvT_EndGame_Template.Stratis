#define MODULES_DIRECTORY node_modules
#include "node_modules\grad-replay\ui\defines.hpp"
#include "node_modules\grad-replay\ui\dialog.hpp"
#include "node_modules\grad-civNotifications\data\dialogs.hpp"

#include "USERSCRIPTS\missionsettings.sqf"
#include "params.hpp"

respawn = 3;
respawnDelay = 9999;
respawnVehicleDelay = 0;
respawnTemplates[] = {"Base"};
respawnOnStart = -1;
respawnDialog = 0;
disabledAI = 0;
enableDebugConsole = 1;

class Header
{
	gameType = EndGame;
	minPlayers = 1;
	maxPlayers = 60;
};

class CfgSounds
{
	#include "node_modules\grad-civNotifications\data\cfgSounds.hpp"
};

class CfgFunctions {
	#include "functions\cfgFunctions.hpp"
	#include "node_modules\grad-loadout\cfgFunctions.hpp"
	#include "node_modules\grad-replay\cfgFunctions.hpp"
	#include "node_modules\grad-civNotifications\cfgFunctions.hpp"
};

class Loadouts {
	baseDelay = 10;  														 																	// minimum time to wait after connect before applying loadout
	perPlayerDelay = 1;  														 															// added random delay based on number of players
	handleRadios = 1;  														 																// if radios should be handled. defaults to 0
	resetLoadout = 1;  														 																// start with empty loadouts instead of modifying existing loadout

	class Faction {
		#include "USERSCRIPTS\loadouts\cfgLoadouts.hpp"
		#include "node_modules\grad-factions-tvt\loadouts.hpp"
	};
};

corpseManagerMode = 1; 													 																// Type of removed bodies: 0 - none, 1 - all, 2 - only respawnable, 3 - only non-respawnable
corpseLimit = 30	; 															 															// Max number of bodies which can be available at the same time. When exceeded, start deleting immediately.
corpseRemovalMinTime = 180; 											 														  // Minimal time in seconds a body stays in the scene (can't be removed sooner).
corpseRemovalMaxTime = 300; 										 														 		// Maximal time in seconds after which a dead body is removed (can't stay longer)

wreckManagerMode = 1; 														 															// Type of removed wrecks: 0 - none, 1 - all, 2 - only respawnable, 3 - only non-respawnable
wreckLimit = 20; 																 																// Max number of wrecks which can be available at the same time. When exceeded, start deleting immediately.
wreckRemovalMinTime = 300; 											  															// Minimal time in seconds a wreck stays in the scene (can't be removed sooner).
wreckRemovalMaxTime = 1200;											   															// Maximal time in seconds after which a wreck is removed (can't stay longer)

minPlayerDistance = 50;															 														//Minimal distance from players to delete corps or wrecks


class CfgTaskEnhancements
{
	enable       = 0; 														 																// 0: disable new task features (default), 1: enable new task features & add new task markers and task widgets into the map
	3d           = 0;  														 																// 0: do not use new 3D markers (default), 1: replace task waypoints with new 3D markers
	3dDrawDist   = 2000;  														 														// 3d marker draw distance (default: 2000)
	share        = 0;  														 														 		// 0: do not count assigned players (default), 1: count how many players have the task assigned
	propagate    = 0;  														 																// 0: do not propagate (default), 1: propagate shared tasks to subordinates
};
